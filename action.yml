name: 'Branch Database Action'
author: DevOps
description: Create, Recreate or Delete a branch database

inputs:
  branch_action:
    description: 'Create, Recreate or Delete a branch database. Default is Create.'
    required: false
    default: 'Create'
  database_name:
    description: 'Database name'
    required: true
  source_database_name:
    description: 'Source database name. Default is patriot_pay'
    required: false
    default: 'patriot_pay'
  github_actor:
    description: 'GitHub actor property'
    required: true
  sql_dump:
    description: 'dump.sql file upload as dump-sql artifact'
    default: false
    required: false
  aws_access_key:
    description: 'AWS Access Key (Required if no aws-actions/configure-aws-credentials)'
    required: false
  aws_secret_key:
    description: 'AWS Secret Key (Required if no aws-actions/configure-aws-credentials)'
    required: false
  aws_region:
    description: 'AWS Region'
    required: false
    default: 'us-east-1'
  database_cluster:
    description: 'Cluster to create the branch database on (Service/Main)'
    required: false
    default: 'Service'
    
# NOTE: we do not want to Create, Recreate, or Delete when database name is patriot_pay

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read
  actions: read
  checks: write
  
runs:
  using: 'composite'        
  steps:
    - if: |
        inputs.github_actor == '' ||
        inputs.database_name == '' ||
        inputs.database_name == 'main' ||
        inputs.database_name == 'master' ||
        inputs.database_name == 'patriot_pay' ||
        (inputs.branch_action != 'Delete' && inputs.source_database_name == '')
      shell: bash
      run: |
        echo "Inputs validation failed."
        exit 1
 
    - name: Get Credentials from Amazon Cognito Identity
      uses: patriotsoftware/cognito-idpool-auth@main
      with:
        cognito-identity-pool-id: "us-east-1:45b20ecf-6975-4a05-97af-543360c1fcaa"
        aws-region: "us-east-1"
        audience: "cognito-identity.amazonaws.com"
        aws-account-id: "305628290583"
        set-in-environment: true 

    - shell: bash
      env:
        DATABASE: ${{ inputs.database_name }}
        USERNAME: ${{ inputs.github_actor }}
        SOURCE_DB: ${{ inputs.source_database_name }}
        ACTION: ${{ inputs.branch_action }}
        DB_CLUSTER: ${{ inputs.database_cluster }}
      run: bash ${{ github.action_path }}/script.sh

    - name: Upload Dump.sql
      if: inputs.sql_dump == 'true' && (success() || failure())
      uses: actions/upload-artifact@v4
      with:
        path: dump.sql 
        name: dump-sql
        retention-days: 1
        if-no-files-found: ignore
